name: DevSecOps Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # or any version you need

      - name: Install Black
        run: pip install black

      - name: Run Black
        run: black --check .

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t hello-world-backend:latest .
          docker save hello-world-backend:latest -o image.tar

      - name: Upload image.tar
        uses: actions/upload-artifact@v4
        with:
          name: image.tar
          path: image.tar

  trivy-fs:
      name: Trivy FS Scan (Source Code)
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: actions/checkout@v3

        - name: Run Trivy vulnerability scanner in fs mode
          run: |
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
            trivy plugin install github.com/umax/trivy-plugin-sonarqube
            trivy fs --format=json --output=trivy.json --ignore-unfixed=true .
            trivy sonarqube trivy.json > trivy-fs.json

        - name: Upload trivy-fs.json
          uses: actions/upload-artifact@v4
          with:
            name: trivy-fs.json
            path: trivy-fs.json

  trivy-image:
    name: Trivy Image Scan
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/checkout@v3

      - name: Download image.tar
        uses: actions/download-artifact@v4
        with:
          name: image.tar
          path: .

      - name: Load docker image
        run: docker load -i image.tar

      - name: Run Trivy vulnerability scanner in image mode
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy plugin install github.com/umax/trivy-plugin-sonarqube
          trivy image --format=json --output=trivy.json --ignore-unfixed=true hello-world-backend:latest
          trivy sonarqube trivy.json > trivy-image.json

      - name: Upload trivy-image.json
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image.json
          path: trivy-image.json

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [trivy-fs, trivy-image]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Download trivy-fs.json
        uses: actions/download-artifact@v4
        with:
          name: trivy-fs.json
          path: trivy/

      - name: Download trivy-image.json
        uses: actions/download-artifact@v4
        with:
          name: trivy-image.json
          path: trivy/

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: sonar
    if: github.ref == 'refs/heads/main'
    outputs:
      release_tag: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download semantic-release configs
        run: curl -fsSL -o .releaserc.js https://raw.githubusercontent.com/RyuunosukeDS3/git-standards/main/.releaserc.js

      - name: Install semantic-release and plugins
        run: |
          npm init -y
          npm install --no-save semantic-release \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            @semantic-release/github \
            @semantic-release/git \
            conventional-changelog-conventionalcommits


      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          npx semantic-release

